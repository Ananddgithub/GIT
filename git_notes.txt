
git 

Need help? git <verb> --help

git config --global user.name "Anand"				# Basic Setting

git config --global user.email "<mail address>"		# Basic Setting

git config --list									# Check the list of global configurations enabled in your git

git status											# checks the state of working directory and staging area.
													
git init 											# Initialize a repo from existing code

git clone <URL> <where to clone>					# Initialize a repo from remote repo

Create a sample.txt file any of your location and do a git init, you can see a .git file, means git started to track.
So if you don't want to track your folder, delete the .git, thats it.

git status

clear

ls

git add <filename>

git add -A 											# stages all changes

git add . 											# stages new files and modifications, without deletions

git rm --cached <filename> or 
	git reset <filename> or							# remove from staging area
	git reset

git mv src.txt dest.txt								#rename

git commit -m <" Message ">		 #m --> message

git commit -a -m "New Changes" 						# Bypass staging area and directly commit (along with all the files in the SA [if any])

git log							#shows what happened in the background during commit

git log --oneline				#Provides oneline logs for all the commits

git log --graph

git log --stat

git show 						#shows the recent change in a detailed manner.

git diff						#Compare same file b/w WD & SA

git diff --cached				#Compare same file b/w SA & Local Repo

git remote -v					#View info about the remote repo

git branch						#shows the list of branches available in local repositories

git branch <branch_name>		#creates a new branch in the local repositories

git push -u origin <branch-name> # pushes the commits to the newly created remote master branch 

git branch -a					#View info about the remote repo and local repo

git branch -d <branch-name>		#deletes a branch locally

git push origin --delete <branch-name>	#delete branch in origin








##################################################################################################

ssh-keygen -t rsa -C "<mail address>" #t->what type of key? her it is rsa. #C->Comment

ssh -T git@github.com #T-> Creates a Temporary session.. 

git remote add origin https://github.com/ananddgithub/sample.git		#git remote add <remote-name> <url>

git push origin master 			#git push [remote_repo-name] [branch-name]


=================================================================================================================

Note: Git will not track empty folder..
=================================================================================================================





















